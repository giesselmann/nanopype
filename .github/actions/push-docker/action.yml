name: 'Push Module'
description: 'Push Pipeline Module'

inputs:
  module:  # pipeline module / tag
    description: 'Pipeline module to push'
    required: true
    type: string
  username:
    required: true
    type: string
  password:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver: docker
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          nanopype/${{ inputs.module }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=semver,pattern={{raw}}
    -
      name: Download base artifact
      uses: actions/download-artifact@v2
      with:
        name: base_focal
        path: /tmp/images/
    -
      name: Download build artifact
      uses: actions/download-artifact@v2
      with:
        name: build_focal
        path: /tmp/images/
    -
      name: Download image artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.module }}
        path: /tmp/images/
    -
      name: Load image
      run: |
        find /tmp/images/ -type f -name '*.tar' | xargs --no-run-if-empty -L 1 docker load -i || true
        docker images
      shell: bash
    -
      name: Push image
      run: |
        for tag in ${{ steps.meta.outputs.tags }}; do
          docker tag ${{ inputs.module }} ${tag};
          docker push ${tag};
        done
      if: ${{ github.event_name == 'push' }}
    #-
    #  name: Push Image
    #  uses: docker/build-push-action@v2
    #  with:
    #    context: .
    #    push: ${{ github.event_name == 'push' }}
    #    file: ./singularity/${{ inputs.module }}/Dockerfile
    #    tags: ${{ steps.meta.outputs.tags }}
